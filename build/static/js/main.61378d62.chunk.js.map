{"version":3,"sources":["components/Airtel.png","components/HomeMessage.js","action-types/bot-manager.actiontype.js","actions/bot-manager.action.js","action-types/top-bar.actiontype.js","actions/top-bar.action.js","components/BotManager.js","action-types/scenario-manager.actiontype.js","actions/scenario-manager.action.js","action-types/trained-data.actiontype.js","actions/trained-data.action.js","components/ScenarioManager.js","components/TrainBot.js","action-types/health-main.actiontype.js","actions/health-main.action.js","components/HealthMain.js","components/TrainedDat.js","action-types/req-analysis.actiontype.js","actions/req-analysis.action.js","components/ReqAnalysisMain.js","components/FeatureList.js","components/TopBar.js","reducers/bot-manager.reducer.js","reducers/trained-data.reducer.js","action-types/login.actiontype.js","reducers/login.reducer.js","reducers/scenario-manager.reducer.js","reducers/req-analysis.reducer.js","reducers/top-bar.reducer.js","reducers/health-main.reducer.js","store/store.js","actions/login.action.js","components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","root","width","maxWidth","position","top","left","color","BotManagerActionType","inputBotName","name","type","botName","inputBotToken","token","botToken","inputBotStrategy","strategy","botStrategy","inputBotAlgorithm","algorithm","botAlgorithm","inputBotMsisdn","msisdn","botMsisdn","inputBotScore","score","botScore","TopBarActionTypes","addBot","value","bot","removeBot","useStyles","theme","formControl","margin","spacing","minWidth","float","height","alignItems","selectEmpty","marginTop","heading","fontFamily","line","backgroundColor","heading1","line1","field1","CSSTextField","withStyles","input","borderRadius","palette","background","paper","border","fontSize","paddingTop","paddingRight","paddingBottom","transition","transitions","create","join","borderColor","boxShadow","InputBase","padding","TextField","BootstrapButton","textTransform","lineHeight","align","Button","connect","state","botManager","botAccessToken","selectedBot","topBar","props","classes","handleChange","action","dispatch","BotManagerActions","a","formData","FormData","botProfile","classifyStrategy","logMsisdn","myInput","document","getElementById","append","files","fetch","method","headers","body","res","json","result","resultMessage","TopBarActions","console","log","then","className","Typography","variant","Divider","FormControl","style","size","id","onChange","e","target","noValidate","autoComplete","paddin","InputLabel","htmlFor","Select","native","inputProps","aria-label","accept","multiple","disableRipple","onClick","ScenarioManagerActionType","inputSCName","SCName","scenarioName","inputSCId","SCId","scenarioId","inputSCStrat","SCStrat","scenarioStrat","inputSCLOB","SCLOB","scenarioLOB","inputMSISDN","reqMSISDN","inputFB","feedback","reqFeedback","inputResp","resp","scenarioResp","TrainedDataActionType","SET_QUERY","SET_BOT_INTENT","SET_BOT_SCENARIO","SET_RESULT","SET_SCLIST","SET_INLIST","SET_SCDLIST","SET_INTENT","SET_BINTENT","setResult","resultval","setScList","scList","setScDList","scDList","setIntent","setBulkIntent","objval","obj","addScenario","ADD_SCENARIO","scenario","remoScenario","val","REM_SCENARIO","remScenario","scenarioEditted","scenarioManager","scenarioRemove","trainedData","useEffect","length","temp2","x","push","TrainedData","ScenarioManager","JSON","stringify","scenarioStrategy","scenarioResponse","msisdnRequired","feedbackRequired","scenarioLob","sc","toString","alert","map","scName","Decrypt","right","HealthMainActionTypes","fillTable","temp","slice","StyledTableCell","head","common","black","white","TableCell","StyledTableRow","hover","TableRow","table","headline","health","resultx","HealthMainActions","gutterBottom","TableContainer","component","Paper","Table","TableHead","TableBody","row","key","scope","status","DT","AI","AutoSuggest","welcomeConfig","disableElevation","heading4","line4","heading3","line3","fill","query","botIntent","botScenario","inList","useState","counter","label","Map","readXlsxFile","rows","sampleCount","display","inName","Array","isArray","ReqAnalysisActionType","inputEncrypted","encrval","encrypted","inputDecrypted","decrval","decrypted","box1","box2","Encrypt","reqAnalysis","ReqAna","Grid","container","item","md","sm","multiline","CryptoJS","require","enc","Base64","parse","encryptedData","AES","encrypt","mode","ECB","pad","Pkcs7","decryptedData","decrypt","Utf8","SelectedListItem","React","selectedIndex","setSelectedIndex","handleListItemClick","event","index","List","to","textDecoration","ListItem","button","selected","ListItemIcon","ListItemText","primary","text","exact","path","BotManager","TrainedDat","TrainBot","HealthMain","ReqAnalysisMain","flexGrow","menuButton","marginRight","title","square","botList","age","AppBar","Toolbar","src","airtelLogo","initialState","LoginActionType","SET_USER","SET_PASSWORD","LOGGED_IN","SET_JWT","user","password","saveOK","loadOK","removeOK","middleware","thunk","rootReducer","combineReducers","flag1","flag2","flag3","scenarioKey","login","isLoggedIn","jwt","actionObj","indexOf","splice","store","createStore","compose","applyMiddleware","inputUser","userIn","inputPassword","passwordIn","loggedIn","isLoggedin","setJwt","Jwt","Login","username","success","jToken","placeholder","App","TopBar","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61378d62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Airtel.95b86977.png\";","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n    position: 'absolute',\n    top: 300,\n    left: 570,\n    color :\"blue\",\n  },\n});\n\nexport default function Types() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n        <Grid container spacing={3}>\n        <Grid item xs={12} sm={3} >      <Typography variant=\"h4\" component=\"h2\" gutterBottom> \n        Manage Your Bots Here\n      </Typography>\n      </Grid>\n      </Grid>\n    </div>\n  );\n}","export const BotManagerActionType = {\n\n    SET_BOT_NAME: 'SET_BOT_NAME' ,\n    SET_BOT_TOKEN: 'SET_BOT_TOKEN',\n    SET_BOT_STRATEGY: 'SET_BOT_STRATEGY',\n    SET_BOT_ALGORITHM: 'SET_BOT_ALGORITHM',\n    SET_BOT_MSISDN: 'SET_BOT_MSISDN',\n    SET_BOT_SCORE: 'SET_BOT_SCORE',\n    CREATE_BOT:\"SAVE_BOT\",\n    LOAD_BOAT:\"LOAD_BOAT\",\n    DELETE_BOT:\"DELETE_BOT\"\n};","import {BotManagerActionType} from \"../action-types/bot-manager.actiontype\";\n\nexport function inputBotName(name){\n    return {type: BotManagerActionType.SET_BOT_NAME,\n            botName: name\n    };\n}\n\nexport function inputBotToken(token){\n    return {type: BotManagerActionType.SET_BOT_TOKEN,\n            botToken: token\n    };\n}\n\nexport function inputBotStrategy(strategy){\n    return {type: BotManagerActionType.SET_BOT_STRATEGY,\n            botStrategy: strategy\n    };\n}\n\nexport function inputBotAlgorithm(algorithm){\n    return {type: BotManagerActionType.SET_BOT_ALGORITHM,\n            botAlgorithm: algorithm\n    };\n}\n\nexport function inputBotMsisdn(msisdn){\n    return {type: BotManagerActionType.SET_BOT_MSISDN,\n            botMsisdn: msisdn === true ? 1 : 2\n    };\n}\n\nexport function inputBotScore(score){\n    return {type: BotManagerActionType.SET_BOT_SCORE,\n            botScore: score\n    };\n}","export const TopBarActionTypes={\n\tSELECT_BOT:\"SELECT_BOT\",\n\tADD_BOT:\"ADD_BOT\",\n\tREMOVE_BOT:\"REMOVE_BOT\"\n}","import {TopBarActionTypes} from \"../action-types/top-bar.actiontype\";\n\nexport function inputBot(value){\n    return {type: TopBarActionTypes.SELECT_BOT,\n            botName: value\n    };\n}\n\nexport function addBot(value){\n    return {type: TopBarActionTypes.SELECT_BOT,\n            bot:value\n    };\n}\n\nexport function removeBot(value){\n    return {type: TopBarActionTypes.SELECT_BOT,\n            bot: value\n    };\n}","import React from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { blue } from '@material-ui/core/colors';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from \"react-redux\";\nimport { BotManagerActionType } from \"../action-types/bot-manager.actiontype\";\nimport * as BotManagerActions from \"../actions/bot-manager.action\"\nimport * as TopBarActions from \"../actions/top-bar.action\"\nimport { TopBarActionTypes } from \"../action-types/top-bar.actiontype\";\nimport { sizing } from '@material-ui/system';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 150,\n      float: \"left\",\n      height: 20,\n      alignItems: \"left\",\n      position:\"relative\",\n      top: 10,\n      left: -420,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    heading :{\n      position:\"relative\",\n      top: -10,\n      left: -590,\n      fontFamily: \"Segoe UI\"\n    },\n    line :{\n      position:\"relative\",\n      top: -10,\n      width: 900,\n      left: -250,\n      height: 2,\n      backgroundColor:\"black\"\n    },\n    heading1 :{\n      position:\"relative\",\n      top: -40,\n      left: -250,\n      fontFamily: \"Segoe UI\"\n    },\n    line1 :{\n      position:\"relative\",\n      top: -40,\n      width: 900,\n      left: 180,\n      height: 2,\n      backgroundColor:\"black\"\n    },\n    field1 :{\n      position:\"relative\",\n      top: 1880,\n      left: 10,\n      \n    },\n  }));\n \n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n      position: 'relative',\n      top: 45,\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 170,\n    height: 20,\n    paddingTop: 1,\n    paddingRight: 12,\n    paddingBottom: 1,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst CSSTextField = withStyles({\n  root: {\n    width: 205,\n    padding: '15px 2px',\n    position: 'relative',\n    top: -70,\n    left: 1,\n      },\n  \n  \n})(TextField);\n\n  const BootstrapButton = withStyles({\n    root: {\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 16,\n      position: 'relative',\n      top: 20,\n      left: 330,\n      padding: '6px 12px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      align: 'center',\n      backgroundColor: '#0367fc',\n      borderColor: '#0367fc',\n      \n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n  \n   function InputFields(props) {\n    const classes = useStyles();\n\n    const handleChange = (action,value) => {\n            switch(action){\n        case \"SET_BOT_NAME\":\n      props.dispatch(BotManagerActions.inputBotName(value));\n        break;\n\n        case \"SET_BOT_TOKEN\":\n      props.dispatch(BotManagerActions.inputBotToken(value));\n        break;\n      \n        case \"SET_BOT_STRATEGY\":\n      props.dispatch(BotManagerActions.inputBotStrategy(value));\n        break;\n\n        case \"SET_BOT_ALGORITHM\":\n      props.dispatch(BotManagerActions.inputBotAlgorithm(value));\n        break;\n\n        case \"SET_BOT_MSISDN\" :\n      props.dispatch(BotManagerActions.inputBotMsisdn(value));\n        break;\n\n        case \"SET_BOT_SCORE\":\n      props.dispatch(BotManagerActions.inputBotScore(value));\n        break;\n    }\n\n    };\n\n\n    async function createBot(){\n\n      let formData = new FormData();\n                /*formData.append(\"botName\",props.botName);\n                formData.append(\"botAccessToken\",props.botToken);\n                formData.append(\"classifyStrategy\",props.botStrategy);\n                formData.append(\"algorithm\",props.botAlgorithm);\n                formData.append(\"botScore\",props.botScore);\n                formData.append(\"logMsisdn\",props.botMsisdn);\n                */\n               let botProfile={\n                    botName:props.botName,\n                    botAccessToken:props.botToken,\n                    classifyStrategy:props.botStrategy,\n                    algorithm:props.botAlgorithm,\n                    botScore:props.botScore,\n                    logMsisdn:props.botMsisdn,\n                }\n                const myInput = document.getElementById('contained-button-file');\n                formData.append(\"botProfile\",botProfile);\n                formData.append(\"trainFile\",myInput.files[0]);\n\n          let res = await fetch('http://10.5.205.104:8080/trainer/createNewBot', {\n            method: 'post',\n            headers: {\n                'Accept': '/',\n                'Content-Type': 'application/json'\n            },\n            body: formData,\n        });\n\n        let result =await  res.json();\n\n        if(result.resultMessage==\"Saved\")\n          props.dispatch(TopBarActions.addBot(props.botName));\n\n        console.log(result.resultMessage);\n}\n\nasync function loadBot(){\nfetch(`http://10.5.205.104:8080/trainer/fetch/getBotProfiles?liveBots=true`)\n.then(res=>res.json())\n.then(res=>{\ndebugger;\nfor(var bot in res){\n  if(res[bot].botName==props.selectedBot){\n    props.dispatch(BotManagerActions.inputBotName(res[bot].botName));\n    props.dispatch(BotManagerActions.inputBotToken(res[bot].botAccessToken));\n    props.dispatch(BotManagerActions.inputBotStrategy(res[bot].classifyStrategy));\n    props.dispatch(BotManagerActions.inputBotAlgorithm(res[bot].algorithm));\n    props.dispatch(BotManagerActions.inputBotMsisdn(res[bot].logMsisdn));\n    props.dispatch(BotManagerActions.inputBotScore(res[bot].botScore));\n  }\n}\n\n});\n}\n\n    async function deleteBot(){\n      let res = await fetch(`http://10.5.205.104:8080/trainer/deleteBot/${props.selectedBot}`, {\n                method: 'get'\n                \n                \n            });\n\n            let result =await  res.json();\n\n            if(result.resultMessage==\"Saved\")\n              props.dispatch(TopBarActions.removeBot(props.selectedBot));\n\n            console.log(result.resultMessage);\n    }\n\n    \n\n\n\n    return (\n        <div className=\"forms\">\n        <Typography variant=\"h3\" className={classes.heading}>\n              Manage Bot\n            </Typography>\n    \n            <Divider className={classes.line}/>\n        \n\n        \n        <FormControl variant=\"outlined\" className={classes.formControl}>\n            <div className= \"ManageBot\">\n            \n            \n              \n            \n            \n                <div className= \"field\">  \n                \n                <p> <div className=\"field1\" style={{ position: \"relative\", left:2, top:-25 }} >Enter Bot Name:  </div> </p>\n                <div className=\"block\"><CSSTextField size=\"small\" height={40} style={{ position: \"relative\", left:2, top:-80}}\n                    id=\"filled-secondary\"\n                    variant=\"filled\"\n                    color=\"secondary\"\n                                        value={props.botName}\n                    onChange={(e)=>handleChange(\"SET_BOT_NAME\",e.target.value)}\n\n                  /> </div>\n                \n                \n                </div>\n                \n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <div className= \"field\"> \n                \n                <p> <div className=\"field1\" style={{ position: \"relative\", left:5, top:-45}}> Enter Bot Access Token:  </div> </p>\n                <div className=\"block\"> <CSSTextField size=\"small\" style={{height: 20, position: \"relative\", left:2, top:-103,  paddin:20 }}\n                    id=\"filled-secondary\"\n                    variant=\"filled\"\n                    color=\"secondary\"\n                    value={props.botToken}\n                    onChange={(e)=>handleChange(\"SET_BOT_TOKEN\",e.target.value)}\n\n                  />\n                   </div>\n                </div>\n            </form>\n            \n            <p><div className=\"field1\" style={{ position: \"relative\", left:25, top:-45}}> Enter Bot Strategy: </div></p>\n            <FormControl variant=\"filled\" className={classes.formControl}>\n        \n        <InputLabel htmlFor=\"filled-strategy-native-simple\"></InputLabel>\n        \n        \n            <Select style={{width:205, height: 48, position: \"relative\", left:1087, top:-107}}\n              native\n                            value={props.botStrategy}\n                    onChange={(e)=>handleChange(\"SET_BOT_STRATEGY\",e.target.value)}\n              inputProps={{\n                name: 'strategy',\n                id: 'filled-strategy-native-simple',\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"DEFAULT\"}>Default</option>\n              <option value={\"EXTERNAL\"}>External</option>\n              <option value={\"NATIVE\"}>Native</option>\n              <option value={\"GRAPH\"}>Graph</option>\n            </Select>\n            </FormControl>\n\n              </div>\n            \n              <p><div className= \"field1\" style={{ position: \"relative\", left:27, top:-60}}> Enter Bot Algorithm Location: \n              </div></p>\n              <div className=\"block\"> \n              <FormControl variant=\"filled\" className={classes.formControl}>\n\n              <InputLabel htmlFor=\"filled-alg-native-simple\"></InputLabel>\n              <Select style={{width:205, height: 48, position: \"relative\", left:1087, top:-125}}\n                native\n                onChange={handleChange}\n                inputProps={{\n                  name: 'alg',\n                  id: 'filled-alg-native-simple',\n                }}\n                value={props.botAlgorithm}\n                    onChange={(e)=>handleChange(\"SET_BOT_ALGORITHM\",e.target.value)}\n\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"postpaid-agent-2,db87c5ddba31ffcc0b308c48b2f9a2cf,default\"}>PostPaid</option>\n                <option value={2}>PrePaid</option>\n                <option value={3}>DTH</option>\n                <option value={4}>Telemedia</option>\n                <option value={\"test_bot.py\"}>HR</option>\n                <option value={\"payments-bank-agent-2,5240347d4e19e7759f084bb883c395ae,default\"}>PaymentsBank</option>\n              </Select>\n              </FormControl>\n              </div>\n              <p> <div className=\"field1\" style={{ position: \"relative\", left:30, top:-75}}> Bot MSISDN Log:  </div> </p>\n              <div className=\"block\"> \n              <FormControl variant=\"filled\" className={classes.formControl}>\n\n                    <InputLabel htmlFor=\"filled-msisdn-native-simple\"></InputLabel>\n                    <Select style={{width:205, height: 48, position: \"relative\", left:1087, top:-143}}\n                      native\n                      onChange={handleChange}\n                      inputProps={{\n                        name: 'msisdn',\n                        id: 'filled-msisdn-native-simple',\n                      }}\n                                            value={props.botMsisdn}\n                    onChange={(e)=>handleChange(\"SET_BOT_MSISDN\",e.target.value)}\n\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={1}>True</option>\n                      <option value={2}>False</option>\n                    </Select>\n                    </FormControl>\n\n                      <p> <div className = \"field1\" style={{ position: \"relative\", left:-355, top:-55}} >Enter Bot Classify Score: </div></p>\n                        <InputLabel id=\"demo-customized-select-label\">   </InputLabel><div className= \"field\"> \n                        \n                      <div className=\"block\"> \n                      \n                          <CSSTextField size=\"small\" style={{width:205, height: 20, position: \"relative\", left:2, top:-140}}\n                          id=\"filled-secondary\"\n                          variant=\"filled\"\n                          color=\"secondary\"\n                                                    value={props.botScore}\n                    onChange={(e)=>handleChange(\"SET_BOT_SCORE\",e.target.value)}\n\n                        />\n                                  </div>\n\n                              \n                              </div>\n            \n\n\n            \n\n            \n            <br />\n            <div className={classes.root} style={{  position:\"relative\", left:-30, top:-40}}>\n           <input\n            accept=\"image/*\"\n            className={classes.input}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n          />\n          <label htmlFor=\"contained-button-file\">\n            \n          </label>\n        \n        </div>\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{position: \"relative\", left:330, top:-75}}\n            onClick={createBot}>\n                Save\n            </BootstrapButton>\n            &emsp; &emsp;\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{position: \"relative\", left:330, top:-75}} onClick={loadBot}>\n                Load\n            </BootstrapButton>\n            <br />\n            <div className= \"DeleteBot\">\n            <Typography variant=\"h3\" className={classes.heading1}>\n              Delete Bot\n            </Typography>\n        \n            <Divider className={classes.line1}/>\n            <br /> <br /> <br /> <br /> <br />\n            <div className= \"field1\">  \n            \n                <br /> <br />\n                \n\n            </div>\n            <br/>\n            <br />\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{position: \"relative\", left:350, top:-180}}\n            onClick={deleteBot}>\n                Delete Bot\n            </BootstrapButton>\n            </div>\n            </div>\n      </FormControl>\n        </div>\n    );\n  }\n\n  function mapStateToProps(state) {\n    return {\n      botName:state.botManager.botName,\n      botToken:state.botManager.botAccessToken,\n      botStrategy:state.botManager.botStrategy,\n      botAlgorithm:state.botManager.botAlgorithm,\n      botMsisdn: state.botManager.botMsisdn,\n      botScore:state.botManager.botScore,\n      selectedBot:state.topBar.botName,\n    };\n  }\n  \n  export default connect(mapStateToProps)(InputFields);","export const ScenarioManagerActionType = {\n\n\tEDIT_SC_IN:\"EDITSCENARIO_IN\",\n\tSC_NAME_IN:\"SC_NAME_IN\",\n\tSC_ID_IN:\"SC_ID_IN\",\n\tSC_STRAT_IN:\"SC_STRAT_IN\",\n\tIS_MSISDN_IN:\"IS_MSISDN_IN\",\n\tIS_FB_IN:\"IS_FB_IN\",\n\tSC_RESP_IN:\"SC_RESP_IN\",\n\tSC_REMOVE:\"SC_REMOVE\",\n\tSC_LOB_IN:\"SC_LOB_IN\",\n\tSAVE_SC:\"SAVE_SC\",\n\tLOAD_SC:\"LOAD_SC\",\n\tREMOVE_SC:\"REMOVE_SC\"\n};","import {ScenarioManagerActionType} from \"../action-types/scenario-manager.actiontype\";\n\n\nexport function inputEditSC(editSC){\n\treturn {type:ScenarioManagerActionType.EDIT_SC_IN,\n\t\t\tscenarioEditted:editSC\n\t};\n}\n\nexport function inputSCName(SCName){\n\treturn {type:ScenarioManagerActionType.SC_NAME_IN,\n\t\t\tscenarioName:SCName\n\t};\n}\n\nexport function inputSCId(SCId){\n\treturn {type:ScenarioManagerActionType.SC_ID_IN,\n\t\t\tscenarioId:SCId\n\t};\n}\n\nexport function inputSCStrat(SCStrat){\n\treturn {type:ScenarioManagerActionType.SC_STRAT_IN,\n\t\t\tscenarioStrat:SCStrat\n\t};\n}\n\nexport function inputSCLOB(SCLOB){\n\treturn {type:ScenarioManagerActionType.SC_LOB_IN,\n\t\t\tscenarioLOB:SCLOB\n\t};\n}\n\nexport function inputMSISDN(msisdn){\n\treturn {type:ScenarioManagerActionType.IS_MSISDN_IN,\n\t\t\treqMSISDN:msisdn === true? 1:2\n\t};\n}\n\nexport function inputFB(feedback){\n\treturn {type:ScenarioManagerActionType.IS_FB_IN,\n\t\t\treqFeedback:feedback === true? 1:2\n\t};\n}\n\nexport function inputResp(resp){\n\treturn {type:ScenarioManagerActionType.SC_RESP_IN,\n\t\t\tscenarioResp:resp\n\t};\n}\n\nexport function inputRemovalScenario(remSC){\n\treturn {type:ScenarioManagerActionType.SC_REMOVE,\n\t\t\tscenarioRemove:remSC\n\t};\n}\n\nexport function saveScenario(obj){\n\treturn {type:ScenarioManagerActionType.SAVE_SC,\n\t\t\tactionObj:{\n\t\t\treqMSISDN:obj.reqMSISDN,\n\t\t\treqFeedback:obj.reqFeedback,\n\t\t\tscenarioId:obj.scenarioId,\n\t\t\tscenarioStrat:obj.scenarioStrat,\n\t\t\tscenarioResp:obj.scenarioResp,\n\t\t\tscenarioLOB:obj.scenarioLOB,\n\t\t\tscenarioName:obj.scenarioName\n\t\t\t}\n\t};\n}\n\nexport function loadScenario(obj){\n\treturn {type:ScenarioManagerActionType.LOAD_SC,\n\t\t\tscenarioEditted:obj.scenarioEditted\n\t};\n}\n\nexport function removeScenario(obj){\n\treturn {type:ScenarioManagerActionType.REMOVE_SC,\n\t\t\tscenarioEditted:obj.scenarioEditted\n\t};\n}\n","export const TrainedDataActionType = {\n\n    SET_QUERY: 'SET_QUERY' ,\n    SET_BOT_INTENT: 'SET_BOT_INTENT',\n    SET_BOT_SCENARIO: 'SET_BOT_SCENARIO',\n    SET_RESULT:\"SET_RESULT\",\n    SET_SCLIST:\"SET_SCLIST\",\n    SET_INLIST:\"SET_INLIST\",\n    SET_SCDLIST:\"SET_SCDLIST\",\n    SET_INTENT:\"SET_INTENT\",\n    SET_BINTENT:\"SET_BINTENT\"\n};","import {TrainedDataActionType} from \"../action-types/trained-data.actiontype\";\n\nexport function inputQuery(queryIn){\n    return {type:TrainedDataActionType.SET_QUERY,\n            query: queryIn\n    };\n}\n\nexport function inputBotIntent(intIn){\n    return {type:TrainedDataActionType.SET_BOT_INTENT,\n            botIntent: intIn\n    };\n}\n\nexport function inputBotScenario(scIn){\n    return {type: TrainedDataActionType.SET_BOT_SCENARIO,\n            botScenario: scIn\n    };\n}\n\nexport function setResult(resultval){\n    return {type: TrainedDataActionType.SET_RESULT,\n            result:resultval\n    };\n}\n\nexport function setScList(resultval){\n    return {type: TrainedDataActionType.SET_SCLIST,\n            scList:resultval\n    };\n}\n\nexport function setInList(resultval){\n    return {type: TrainedDataActionType.SET_INLIST,\n            inList:resultval\n    };\n}\n\nexport function setScDList(resultval){\n    return {type: TrainedDataActionType.SET_SCDLIST,\n            scDList:resultval\n    };\n}\n\nexport function setIntent(){\n    return{\n        type:TrainedDataActionType.SET_INTENT,\n    }\n}\n\nexport function setBulkIntent(objval){\n    return{\n        type:TrainedDataActionType.SET_BINTENT,\n        obj:objval\n    }\n}\n\n//FINAL\nexport function addScenario(obj){\n    return{\n        type:TrainedDataActionType.ADD_SCENARIO,\n        scenario:obj\n    }\n}\n//FINAL\nexport function remoScenario(val){\n    return{\n        type:TrainedDataActionType.REM_SCENARIO,\n        remScenario:val\n    }\n}\n","import React,{useEffect} from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { blue } from '@material-ui/core/colors';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { ScenarioManagerActionType } from \"../action-types/scenario-manager.actiontype\";\nimport { connect } from \"react-redux\";\nimport * as ScenarioManager from \"../actions/scenario-manager.action\";\nimport * as TrainedData from \"../actions/trained-data.action\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 150,\n      float: \"left\",\n      height: 30,\n      alignItems: \"left\",\n      position:\"relative\",\n      top: 10,\n      left: -420,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    heading :{\n      position:\"relative\",\n      top: -10,\n      left: -540,\n      fontFamily: \"Segoe UI\"\n    },\n    line :{\n      position:\"relative\",\n      top: -10,\n      width: 900,\n      left: -250,\n      height: 2,\n      backgroundColor:\"black\"\n    },\n    heading1 :{\n      position:\"relative\",\n      top: -90,\n      left: -180,\n      fontFamily: \"Segoe UI\"\n    },\n    line1 :{\n      position:\"relative\",\n      top: -90,\n      width: 900,\n      left: 180,\n      height: 2,\n      backgroundColor:\"black\"\n    },\n    field1 :{\n      position:\"relative\",\n      top: 1880,\n      left: 10,\n      \n    },\n  }));\n \n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n      position: 'relative',\n      top: 45,\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 170,\n    height: 30,\n    paddingTop: 6,\n    paddingRight: 12,\n    paddingBottom: 6,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst CSSTextField = withStyles({\n  root: {\n    width: 205,\n    padding: '5px 20px',\n    position: 'relative',\n    top: -70,\n    left: 1,\n      },\n\n  \n  \n})(TextField);\n\n  const BootstrapButton = withStyles({\n    root: {\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 16,\n      position: 'relative',\n      top: 20,\n      left: 330,\n      padding: '6px 12px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      align: 'center',\n      backgroundColor: '#0367fc',\n      borderColor: '#0367fc',\n      \n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n  \n  function InputTextField(props) {\n\n    const classes = useStyles();\n    useEffect(() => {\n    if(props.scList.length==0 && props.scDList.length==0){\n      let temp2=[];\n      fetch(`http://10.5.205.104:8080/trainer/getBotScenarios/${props.botName}`)\n        .then(res=>res.json())\n        .then(res=>{\n          for(var x in res){\n            if(!res[x].scenario) {\n              continue;\n            }\n            temp2.push(res[x].scenario.scenarioName);\n          }\n          props.dispatch(TrainedData.setScList(temp2));\n  \n          props.dispatch(TrainedData.setScDList(res));\n        });\n    }\n  },[props.botName]);\n    const handleChange = (action,input) => {\n      switch(action){\n        case \"SCEDIT_IN\" :  \n          props.dispatch(ScenarioManager.inputEditSC(input));\n          break;\n  \n        case \"SC_NAME\" :\n          props.dispatch(ScenarioManager.inputSCName(input));\n          break;   \n        \n  \n        case \"ID_IN\" :\n          props.dispatch(ScenarioManager.inputSCId(input));\n          break; \n        case \"STRAT_IN\" :  \n          props.dispatch(ScenarioManager.inputSCStrat(input));\n          break;\n  \n        case \"LOB_IN\" :\n          props.dispatch(ScenarioManager.inputSCLOB(input));\n          break; \n        case \"MSISDN_IN\" :  \n          props.dispatch(ScenarioManager.inputMSISDN(input));\n          break;\n  \n        case \"FB_IN\" :\n          props.dispatch(ScenarioManager.inputFB(input));\n          break;  \n        case \"RESP_IN\" :  \n          props.dispatch(ScenarioManager.inputResp(input));\n          break;\n  \n        case \"REMSC_IN\" :\n          props.dispatch(ScenarioManager.inputRemovalScenario(input));\n          break;                       \n     \n        }\n      };\n\n      async function saveScenario(){\n        let res = await fetch(`http://10.5.205.104:8080/trainer/saveScenario`, {\n          method: 'post',\n          headers: {\n              'Accept': '*/*',\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n                scenarioName:props.scenarioName,\n                scenarioId:props.scenarioId,\n                scenarioStrategy:props.scenarioStrat,\n                scenarioResponse:props.scenarioResp,\n                msisdnRequired:props.reqMSISDN,\n                feedbackRequired:props.reqFeedback,\n                scenarioLob:props.scenarioLOB,\n          })\n      });\n      props.dispatch(TrainedData.addScenario(\n        {\n                scenarioName:props.scenarioName,\n                scenarioId:props.scenarioId,\n                scenarioStrategy:props.scenarioStrat,\n                scenarioResponse:props.scenarioResp,\n                msisdnRequired:props.reqMSISDN,\n                feedbackRequired:props.reqFeedback,\n                scenarioLob:props.scenarioLOB,\n        }));\n      let result = await res.json();\n\n\n}\n\n    async function loadScenario(){\n      var sc;\n      fetch(`http://10.5.205.104:8080/trainer/getAllScenarios`)\n        .then(res=>res.json())\n        .then(res=>{\n\n          for(sc in res){\n            if(res[sc].scenarioName==props.scenarioEditted)\n            {\n              props.dispatch(ScenarioManager.inputSCName(res[sc].scenarioName));\n              props.dispatch(ScenarioManager.inputSCId(res[sc].scenarioId));\n              props.dispatch(ScenarioManager.inputSCStrat(res[sc].scenarioStrategy));\n              props.dispatch(ScenarioManager.inputSCLOB(res[sc].scenarioLob));\n              props.dispatch(ScenarioManager.inputMSISDN(res[sc].msisdnRequired.toString()));\n              props.dispatch(ScenarioManager.inputFB(res[sc].feedbackRequired.toString()));\n              props.dispatch(ScenarioManager.inputResp(res[sc].scenarioResponse));\n              break;\n            }\n          }\n\n        });\n\n  }\n\n  async function remScenario(){\n    let res = await fetch(`http://10.5.205.104:8080/trainer/removeScenario?name=${props.scenarioRemove}`, {\n              method: 'get'\n              \n          });\n\n\n      let result =await res.json();  \n      if(result==true){\n        props.dispatch(TrainedData.remoScenario(props.scenarioRemove));\n      }\n                alert(\"Scenario Removed\");      \n    \n  }\n\n\n\n    return (\n        <div className=\"forms\">\n        <Typography variant=\"h3\" className={classes.heading}>\n              Manage Scenario\n            </Typography>\n    \n            <Divider className={classes.line}/>\n        \n\n        \n        <FormControl variant=\"outlined\" className={classes.formControl}>\n            <div className= \"ManageBot\">\n            \n            \n              \n            \n            \n                <div className= \"field\">  \n                \n                <p> <div className=\"field1\" style={{ position: \"relative\", left:2, top:-10 }} >Select Scenario to Edit:  </div> </p>\n                <div className=\"block\">\n                <FormControl variant=\"filled\" className={classes.formControl}>\n                \n                <Select style={{width:200, height:48, position: \"relative\", left:425, top:-70}}\n                labelId=\"demo-customized-select-label\"\n                id=\"demo-customized-select\"\n                value={props.scenarioEditted}\n                onChange={(e)=>handleChange(\"SCEDIT_IN\",e.target.value)}\n                >\n                          {\n                props.scList.map((scName) => (\n                  <option value={scName}>{scName}</option>\n                  // <MenuItem  value={scName} >\n                  //   {scName}\n                  // </MenuItem>\n              ))}\n                </Select>\n                </FormControl>\n                   </div>\n                \n                \n                </div>\n                <p><div className=\"field1\" style={{ position: \"relative\", left:25, top:-10}}> Enter Scenario Name: </div></p>\n            <CSSTextField size=\"small\" style={{height: 30, position: \"relative\", left:330, top:-61}}\n                    id=\"filled-secondary\"\n                    variant=\"filled\"\n                    color=\"secondary\"\n                    value={props.scenarioName}\n                    onChange={(e)=>handleChange(\"SC_NAME\",e.target.value)}\n                  />\n            \n              \n            \n            \n            <p><div className=\"field1\" style={{ position: \"relative\", left:25, top:-35}}> Enter Scenario ID: </div></p>\n            <CSSTextField size=\"small\" style={{height: 30, position: \"relative\", left:330, top:-85}}\n                    id=\"filled-secondary\"\n                    variant=\"filled\"\n                    color=\"secondary\"\n                    value={props.scenarioId}\n                    onChange={(e)=>handleChange(\"ID_IN\",e.target.value)}\n                  />\n            \n              \n              </div>\n            \n              <p><div className= \"field1\" style={{ position: \"relative\", left:27, top:-60}}> Select Scenario Strategy: \n              </div></p>\n              <div className=\"block\"> \n\n              <InputLabel htmlFor=\"filled-age-native-simple\"></InputLabel>\n              <FormControl variant=\"filled\" className={classes.formControl}>\n              <Select style={{width:205, height: 48, position: \"relative\", left:1090, top:-120}}\n                native\n                value={props.scenarioStrat}\n                onChange={(e)=>handleChange(\"STRAT_IN\",e.target.value)}\n                inputProps={{\n                  name: 'lob',\n                  id: 'filled-lob-native-simple',\n                }}\n              >\n                      <option value={\"DTScenario\"}>DTScenario</option>\n                      <option value={\"FAQScenario\"}>FAQScenario</option>\n                      <option value={\"SwitchScenario\"}>SwitchScenario</option>\n              </Select>\n              </FormControl>\n              </div>\n              <p> <div className=\"field1\" style={{ position: \"relative\", left:30, top:-90}}> Select Scenario LOB:  </div> </p>\n              <div className=\"block\"> \n                    <InputLabel htmlFor=\"filled-age-native-simple\"></InputLabel>\n                    <FormControl variant=\"filled\" className={classes.formControl}>\n                    <Select style={{width:205, height: 48, position: \"relative\", left:1090, top:-149}}\n                      native\n                      value={props.scenarioLOB}\n                      onChange={(e)=>handleChange(\"LOB_IN\",e.target.value)}\n                      inputProps={{\n                        name: 'msisdn',\n                        id: 'filled-msisdn-native-simple',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={\"PostPaid\"}>Postpaid</option>\n                      <option value={\"PrePaid\"}>Prepaid</option>\n                      <option value={\"\"}>DTH</option>\n                      <option value={\"Telemedia\"}>Telemedia</option>\n                      <option value={\"HR\"}>HR</option>\n                      <option value={\"PaymentsBank\"}>PaymentsBank</option>\n                    </Select>\n                    </FormControl>\n                    </div>\n              <p> <div className=\"field1\" style={{ position: \"relative\", left:30, top:-120}}> MSISDN Required:  </div> </p>\n              <div className=\"block\"> \n\n                    <InputLabel htmlFor=\"filled-age-native-simple\"></InputLabel>\n                    <FormControl variant=\"filled\" className={classes.formControl}>\n                    <Select style={{width:205, height: 48, position: \"relative\", left:1090, top:-177}}\n                      native\n                      value={props.reqMSISDN}\n                      onChange={(e)=>handleChange(\"MSISDN_IN\",e.target.value)}\n                      inputProps={{\n                        name: 'msisdn',\n                        id: 'filled-msisdn-native-simple',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={1}>True</option>\n                      <option value={2}>False</option>\n                    </Select>\n                    </FormControl>\n                  </div>\n                  <p> <div className=\"field1\" style={{ position: \"relative\", left:30, top:-140}}> Feedback Required:  </div> </p>\n              <div className=\"block\"> \n                    <InputLabel htmlFor=\"filled-age-native-simple\"></InputLabel>\n                    <FormControl variant=\"filled\" className={classes.formControl}>\n                    <Select style={{width:205, height: 48, position: \"relative\", left:1090, top:-205}}\n                      native\n                      value={props.reqFeedback}\n                      onChange={(e)=>handleChange(\"FB_IN\",e.target.value)}\n                      inputProps={{\n                        name: 'msisdn',\n                        id: 'filled-msisdn-native-simple',\n                      }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      <option value={1}>True</option>\n                      <option value={2}>False</option>\n                    </Select>\n                    </FormControl>\n                      <p> <div className = \"field1\" style={{ position: \"relative\", left:-352, top:-125}} >Enter Scenario Response: </div></p>\n                        <InputLabel id=\"demo-customized-select-label\">   </InputLabel><div className= \"field\"> \n                        \n                      <div className=\"block\"> \n                      \n                          <CSSTextField size=\"small\" style={{width:205, height: 48, position: \"relative\", left:23, top:-195}}\n                          id=\"filled-secondary\"\n                          variant=\"filled\"\n                          color=\"secondary\"\n                          value={props.scenarioResp}\n                    onChange={(e)=>handleChange(\"RESP_IN\",e.target.value)}\n                        />\n                        </div>\n\n                      \n\n                              \n                    </div>\n            \n\n\n            \n\n            \n            <br />\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{position: \"relative\", left:540, top:-150}}\n            onClick={saveScenario}>\n                Save\n            </BootstrapButton>\n            &emsp; &emsp;\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{position: \"relative\", left:540, top:-150}} onClick={loadScenario}>\n                Load\n            </BootstrapButton>\n            <br />\n            <div className= \"DeleteBot\">\n            <Typography variant=\"h3\" className={classes.heading1}>\n              Remove Scenario\n            </Typography>\n        \n            <Divider className={classes.line1}/>\n            <br /> <br /> <br /> <br /> <br />\n            <div className= \"field1\">  \n            \n                <br /> <br />\n                <p> <div className=\"field1\" style={{ position: \"relative\", left:-120, top:-200}}> Select Scenario to Delete:  </div> </p>\n              <div className=\"block\"> \n                    <InputLabel htmlFor=\"filled-age-native-simple\"></InputLabel>\n                    <FormControl variant=\"filled\" className={classes.formControl}>\n                    <Select style={{width:205, height: 48, position: \"relative\", left:420, top:-250}}\n                      native\n                      value={props.scenarioRemove}\n                      onChange={(e)=>handleChange(\"REMSC_IN\",e.target.value)}\n                      inputProps={{\n                        name: 'msisdn',\n                        id: 'filled-msisdn-native-simple',\n                      }}\n                    >\n                      {\n                        // <option value={\"True\"}>True</option>\n                props.scList.map((scName) => (\n                  <option value={scName}>{scName}</option>\n                  // <MenuItem  value={scName} >\n                  //   {scName}\n                  // </MenuItem>\n              ))}\n                    </Select>\n                    </FormControl>\n                        </div>\n            </div>\n            <br/>\n            <br />\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{position: \"relative\", left:450, top:-190}}\n            onClick={remScenario}>\n                Delete Scenario\n            </BootstrapButton>\n            </div>\n            </div>\n      </FormControl>\n        </div>\n    );\n  }\n\n  function mapStateToProps(state) {\n    return{\n      scenarioEditted:state.scenarioManager.scenarioEditted,\n      scenarioName:state.scenarioManager.scenarioName,\n      scenarioId:state.scenarioManager.scenarioId,\n      scenarioStrat:state.scenarioManager.scenarioStrat,\n      scenarioLOB:state.scenarioManager.scenarioLOB,\n      reqMSISDN:state.scenarioManager.reqMSISDN,\n      reqFeedback:state.scenarioManager.reqFeedback,\n      scenarioResp:state.scenarioManager.scenarioResp,\n      scenarioRemove:state.scenarioManager.scenarioRemove,\n      scList:state.trainedData.scList,\n      scDList:state.trainedData.scDList,\n      botName:state.topBar.botName\n    };\n}\n  \n  export default connect(mapStateToProps)(InputTextField);","import React from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { blue } from '@material-ui/core/colors';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '75ch',\n      height: 1000\n    },\n  },\n\n \n \n  Decrypt:{\n    position:\"absolute\",\n    top: -300,\n    left : 40,\n    textTransform: \"capitalize\"\n  },\n\n  heading :{\n    position:\"absolute\",\n    top: 80,\n    left: 405,\n    fontFamily: \"Segoe UI\"\n  },\n  line :{\n    position:\"relative\",\n    top: -220,\n    width: 900,\n    left: 405,\n    height: 2,\n    backgroundColor:\"black\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n    float: \"left\"\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\n \n    \n  const BootstrapButton = withStyles({\n    root: {\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 16,\n      width: 200,\n      height: 50,\n      position: 'relative',\n      right: 180,\n      top: -150,\n      padding: '6px 12px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      align: 'center',\n      backgroundColor: '#0063cc',\n      borderColor: '#0063cc',\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n  function SimpleSelect(props) {\n    const classes = useStyles();\n    \n    async function trainBot(){\n      let res =  await fetch(`http://10.5.205.104:8080/trainer/trainBot/${props.selectedBot}`, {\n        method: 'get'\n        \n    });\n\n    let result = await res.json();\n    alert(\"Training Successful\");\n    console.log(result.resultMessage);\n\n    }\n    async function makeBotLive(){\n      let res =  await fetch(`http://10.5.205.104:8080/trainer/makeBotLive/${props.selectedBot}`, {\n        method: 'get'\n        \n    });\n\n    let result = await res.json();\n\n    console.log(result.resultMessage); \n\n    }\n\n    return (\n      <div>\n        <Typography variant=\"h3\" className={classes.heading}>\n          Train Bot\n        </Typography>\n    \n        <Divider className={classes.line}/>\n        \n        <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.Decrypt}\n        onClick={trainBot}>\n                Train Bot\n        </BootstrapButton> \n        &emsp; &emsp; &emsp;\n        <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.Decrypt}\n        onClick={makeBotLive}>\n                Make Bot Live\n        </BootstrapButton>\n\n    <span style={{position:\"relative\",top:250}}>&nbsp;&nbsp;</span>\n    </div>\n    );\n  }\n\n  function mapStatetoProps(state){\n    return{\n    selectedBot:state.topBar.botName\n  };\n  }\n\n  export default connect(mapStatetoProps)(SimpleSelect);","export const HealthMainActionTypes={\n\tFILL_TABLE:\"FILL_TABLE\"\n};","import {HealthMainActionTypes} from \"../action-types/health-main.actiontype\";\n\nexport function fillTable(resultval){\n\tvar x;\n\t//console.log(resultval);\n\tlet temp=[];\n            for(x in resultval){\n                temp.push(resultval[x]);\n      }\n     //console.log(temp);\n\treturn {\n\t\ttype:HealthMainActionTypes.FILL_TABLE,\n\t\tresult:temp.slice()\n\t};\n}","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport * as HealthMainActions from \"../actions/health-main.action\"\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\n\n\n\n\nfunction createData(Bot_Name,status, DT, AI, AutoSuggest,welcomeConfig) {\n  return { Bot_Name,status, DT, AI, AutoSuggest,welcomeConfig };\n}\n\nconst rows = [\n  \n];\n\nconst useStyles = makeStyles({\n  table: {\n    maxWidth: 900,\n    position :\"relative\",\n    left:400,\n    top:-250\n  },\n  headline: {\n    position: \"relative\",\n    top: -285,\n    left:-200,\n  },\n  line :{\n    position:\"relative\",\n    top: -300,\n    width: 900,\n    left: 383,\n    height: 2,\n    backgroundColor:\"black\"\n  }\n});\n\n\n\nfunction CustomizedTables(props) {\n  const classes = useStyles();\n\n  //%%%%%%%%%%%%%%%%%%%\n  async function healthCheck(){\n            let res =  await fetch('http://10.5.205.104:8080/trainer/getHealthCheckStatus', {\n              method: 'get',\n              headers: {\n                  'Accept': '*/*',\n              },\n            });\n            //let resulty=[{\"DT\":\"DOWN\",\"welcomeConfig\":\"UP\",\"AI\":\"DOWN\",\"name\":\"Payments Bank\",\"AutoSuggest\":\"UP\",\"status\":\"UP\"},{\"DT\":\"UP\",\"welcomeConfig\":\"UP\",\"AI\":\"UP\",\"name\":\"Postpaid\",\"AutoSuggest\":\"UP\",\"status\":\"UP\"},{\"DT\":\"UP\",\"welcomeConfig\":\"UP\",\"AI\":\"UP\",\"name\":\"Prepaid\",\"AutoSuggest\":\"UP\",\"status\":\"UP\"},{\"DT\":\"UP\",\"welcomeConfig\":\"UP\",\"AI\":\"UP\",\"name\":\"HR\",\"AutoSuggest\":\"DOWN\",\"status\":\"UP\"},{\"DT\":\"UP\",\"welcomeConfig\":\"UP\",\"AI\":\"UP\",\"name\":\"Postpaid Siebel\",\"AutoSuggest\":\"UP\",\"status\":\"UP\"}];\n\n            let resultx = await res.json();\n            props.dispatch(HealthMainActions.fillTable(resultx));\n            console.log('Success');\n            //console.log(props.result);\n\n  }\n  //{console.log(result)}\n\n  return (\n        <div>\n    <Typography  variant=\"h3\" gutterBottom className={classes.headline}>\n        Health Check Status\n    </Typography>\n\n\n    <Divider className={classes.line}/>\n\n    <TableContainer component={Paper} className={classes.table}>\n      <Table  aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Bot Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Bot Satus</StyledTableCell>\n            <StyledTableCell align=\"right\">DT</StyledTableCell>\n            <StyledTableCell align=\"right\">AI</StyledTableCell>\n            <StyledTableCell align=\"right\">Elastic Search</StyledTableCell>\n            <StyledTableCell align=\"right\">Configuration</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.result.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.status}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.DT}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.AI}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.AutoSuggest}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.welcomeConfig}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    <Button style={{textTransform:\"capitalize\",position:\"relative\",top:70,left:400}} variant=\"contained\" color=\"primary\" disableElevation \n    onClick={healthCheck}>\n      Refresh\n    </Button>\n\n    </div>\n\n  );\n}\nfunction mapStatetoProps(state){\n  return{\n    result:state.health.result,\n  };\n}\n\nexport default connect(mapStatetoProps)(CustomizedTables)","import React,{useEffect,useState} from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { blue } from '@material-ui/core/colors';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { connect } from \"react-redux\";\nimport { TrainedDataActionType } from \"../action-types/trained-data.actiontype\"\nimport * as TrainedData from \"../actions/trained-data.action\"\n//import { TrainedDataActionType } from \"../../Action-Types/trained-data.actiontype\"\n//import * as TrainedData from \"../../Actions/trained-data.action\"\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport readXlsxFile from 'read-excel-file'\n\n\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 150,\n    float: \"left\",\n    height: 30,\n    alignItems: \"left\",\n    position: \"relative\",\n    top: 10,\n    left: -430,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  heading: {\n    position: \"relative\",\n    top: -5,\n    left: -545,\n    fontFamily: \"Segoe UI\"\n  },\n  line: {\n    position: \"relative\",\n    top: -5,\n    width: 900,\n    left: -250,\n    height: 3,\n    backgroundColor: \"black\"\n  },\n  heading1: {\n    position: \"relative\",\n    top: 220,\n    left: -90,\n    fontFamily: \"Segoe UI\"\n  },\n  line1: {\n    position: \"relative\",\n    top: 220,\n    width: 900,\n    left: 180,\n    height: 3,\n    backgroundColor: \"black\"\n  },\n  heading4: {\n    position: \"relative\",\n    top: 150,\n    left: -100,\n    fontFamily: \"Segoe UI\"\n  },\n  line4: {\n    position: \"relative\",\n    top: 150,\n    width: 900,\n    left: 180,\n    height: 2,\n    backgroundColor: \"black\"\n  },\n  heading3: {\n    position: \"relative\",\n    top: 100,\n    left: 135,\n    fontFamily: \"Segoe UI\"\n  },\n  line3: {\n    position: \"relative\",\n    top: 105,\n    width: 900,\n    left: 170,\n    height: 2,\n    backgroundColor: \"black\"\n  },\n  field1: {\n    position: \"relative\",\n    top: 1880,\n    left: 10,\n\n  },\n}));\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n      position: 'relative',\n      top: 45,\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 170,\n    height: 30,\n    paddingTop: 6,\n    paddingRight: 12,\n    paddingBottom: 6,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst CSSTextField = withStyles({\n  root: {\n    width: 205,\n    padding: '10px 0px',\n    position: 'relative',\n    top: -70,\n    left: 1,\n    height: 20,\n    fill: 'white',\n  },\n\n\n\n})(TextField);\n\nconst BootstrapButton = withStyles({\n  root: {\n    boxShadow: 'none',\n    textTransform: 'none',\n    fontSize: 16,\n    position: 'relative',\n    top: 20,\n    left: 330,\n    padding: '6px 12px',\n    border: '1px solid',\n    lineHeight: 1.5,\n    align: 'center',\n    backgroundColor: '#0367fc',\n    borderColor: '#0367fc',\n\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      backgroundColor: '#0069d9',\n      borderColor: '#0062cc',\n      boxShadow: 'none',\n    },\n    '&:active': {\n      boxShadow: 'none',\n      backgroundColor: '#0062cc',\n      borderColor: '#005cbf',\n    },\n    '&:focus': {\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n    },\n  },\n})(Button);\n\n\n\n\n\n\n\n\nfunction InputTextField(props) {\n  const classes = useStyles();\n  const [counter,setCounter]=useState(1);\nuseEffect(() => {\n\n        \n    /*fetch(`http://10.5.205.104:8080/trainer/getAllScenarioNames`)\n      .then(res=>res.json())\n      .then(res=>props.dispatch(TrainedData.setScList(res)));\n    */\n      let temp=[];\n      let temp2=[];\n    fetch(`http://10.5.205.104:8080/trainer/getBotScenarios/${props.botName}`)\n      .then(res=>res.json())\n      .then(res=>{\n        for(var x in res){\n          if(!res[x].scenario) {\n            continue;\n          }\n          temp.push(res[x].label);\n          temp2.push(res[x].scenario.scenarioName);\n        }\n        props.dispatch(TrainedData.setInList(temp));\n        props.dispatch(TrainedData.setScList(temp2));\n\n        props.dispatch(TrainedData.setScDList(res));\n      });\n\n      //setScDetail([{\"id\":\"5c18be0c3b228558728778a4\",\"label\":\"abuse\",\"scenario\":{\"id\":\"5b0bcf473b22857dcf7f1065\",\"scenarioId\":\"5b0bce9c98a4edf346508a30\",\"scenarioName\":\"Abuse\",\"scenarioStrategy\":\"DTScenario\",\"scenarioLob\":\"null\",\"scenarioResponse\":\"\",\"msisdnRequired\":false,\"feedbackRequired\":true,\"scenarioKey\":\"5b0bce9c98a4edf346508a30-Abuse\"},\"sampleCount\":0}]);\n\n\n},[props.botName]);\n\n\n  const handleChange = (action, input) => {\n    switch (action) {\n      case \"QUERY_IN\":\n        props.dispatch(TrainedData.inputQuery(input));\n        break;\n\n      case \"INTENT_IN\":\n        props.dispatch(TrainedData.inputBotIntent(input));\n        break;\n\n      case \"SC_IN\":\n        props.dispatch(TrainedData.inputBotScenario(input));\n        break;\n\n    }\n  };\n\n\n  async function genIntents() {\n      \n    let res = await fetch(`http://10.5.205.104:8080/trainer/getBotIntentJson/${props.botName}?query=${props.query}`, {\n      method: 'get'\n    });\n    console.log(\"hey\");\n    let result = await res.json();\n    //let result=[{\"scenarioName\":\"yyyyyyyyyyyyy\",\"score\":\"444444444\"},{\"scenarioName\":\"kkkkkkkkkkk\",\"score\":\"444444444\"}];\n    props.dispatch(TrainedData.setResult(result));\n\n\n    //console.log(result);\n\n  };\n\n  async function mapIntents() {\n    let intentMapp = new Map();\n    intentMapp[props.botIntent] = props.botScenario;\n        let formData=new FormData();\n    formData.append(props.botIntent,props.botScenario);\n\n    let res = await fetch(`http://10.5.205.104:8080/trainer/mapBotIntent/${props.botName}`, {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n            body: formData\n\n    });\n\n    let result = await res.json();\n\n\n    if (result.resultMessage == \"Saved\")\n      { \n        props.dispatch(TrainedData.setIntent());\n      }\n    else\n      console.log(\"nope\");\n\n    console.log(result);\n\n  }\n//////NEW CHANGES\n  async function mapIntentsBulk(){\n      let formData = new FormData();\n                const myInput = document.getElementById('contained-button-file');\n                formData.append('file', myInput.files[0]);\n\n    let res=await fetch(`http://10.5.205.104:8080/trainer/mapBotIntentByFile/${props.botName}`,{\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: formData\n\n    });\n\n    let result= await res.json();\n    \n\n      readXlsxFile(myInput.files[0]).then((rows) => {\n        for(var row in rows){\n          if(row[0]!=\"AI Intent\"){\n          console.log(row);\n          props.dispatch(TrainedData.setBulkIntent({\n            id:null,\n            label:row[0],\n            scenario:{\n              id:row[2],\n              scenarioId:row[2],\n              scenarioName:row[1],\n              scenarioStrategy:row[3],\n              scenarioLob:row[7],\n              scenarioResponse:row[4],\n              msisdnRequired:row[5],\n              feedbackRequired:row[6]\n            },\n            sampleCount:\"0\"\n          }))\n        }\n        }\n      })\n\n\n       /* if(result.resultMessage===\"Saved\")\n          console.log(\"Success\");\n        else\n          console.log(\"Fail\");\n        */\n}\n\n  return (\n    <div className=\"forms\">\n      <Typography variant=\"h3\" className={classes.heading}>\n        Check Bot Intent\n            </Typography>\n\n      <Divider className={classes.line} />\n\n\n\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <div className=\"ManageBot\">\n\n          <div className=\"field\" style={{ position: \"relative\", left: 2, top: 20 }}>\n            <p><div className=\"field1\" >\n              Enter User Query Text:\n                </div>\n            </p>\n            <div className=\"block\"><CSSTextField size=\"small\" style={{ height: 10, position: \"relative\", left: -200, top: -60 }}\n              id=\"filled-secondary\"\n              variant=\"filled\"\n              color=\"secondary\"\n              value={props.query}\n              onChange={(e) => handleChange(\"QUERY_IN\", e.target.value)}\n            /> </div>\n          </div>\n\n          <Typography variant=\"h3\" className={classes.heading3}>\n            Map Intent to Scenario\n                </Typography>\n\n          <Divider className={classes.line3} />\n\n\n          <div id=\"singleUpload\" style={{display:\"block\"}}>\n\n          <div className=\"field\" style={{ position: \"relative\", left: 2, top: 150 }}>\n            <p> <div className=\"field1\" style={{ position: \"relative\", left: 2, top: -55 }} >Select Bot Intent:  </div> </p>\n            <div className=\"block\"><Select style={{ width:200, position: \"relative\", left: 2, top: -95, height:48 }}\n              id=\"filled-secondary\"\n              variant=\"filled\"\n              value={props.botIntent}\n              onChange={(e) => handleChange(\"INTENT_IN\", e.target.value)}\n            > \n            {\n                props.inList.map((inName) => (\n                  <option  value={inName} >\n                    {inName}\n                  </option>\n            ))}\n\n            </Select>\n            </div>\n\n\n          </div>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div className=\"field\" style={{ position: \"relative\", left: 1, top: 170 }}>\n\n              <p> <div className=\"field1\" style={{ position: \"relative\", left: 5, top: -90 }}> Select Scenario:  </div> </p>\n              <div className=\"block\"> <Select style={{ width:200, position: \"relative\", left: 2, top: -135, height:48 }}\n                id=\"filled-secondary\"\n                variant=\"filled\"\n                value={props.botScenario}\n                onChange={(e) => handleChange(\"SC_IN\", e.target.value)}\n              >\n              {\n                props.scList.map((scName) => (\n                  <option  value={scName} >\n                    {scName}\n                  </option>\n              ))}\n          </Select>\n              </div>\n            </div>\n          </form>\n          </div>\n\n\n      \n\n\n\n\n\n          <br />\n          <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{ position: \"relative\", left: 315, top: -220 }}\n            onClick={genIntents}>\n            Generate\n            </BootstrapButton>\n          <div style={{ position: \"relative\", left: 420, top: -350 }}>\n            {\n              props.result.map((row) => (\n                <><div style={{ left: 500, top: 500 }}>{row.scenarioName}      &emsp;  &emsp; &emsp;    {row.score}</div><br /></>\n              ))\n            }\n          </div>\n\n            <br />\n            <div className=\"DeleteBot\">\n            <Typography variant=\"h3\" className={classes.heading4}>\n              Map Bulk Intents\n            </Typography>\n\n            <Divider className={classes.line4} />\n          \n      <div className={classes.root} id=\"bulkUpload\" style={{  position:\"relative\", left:-140, top:200}}>\n           <input\n           \n            className={classes.input}\n            id=\"contained-button-file\"\n            multiple\n            type=\"file\"\n          />\n          <br />\n          \n        <BootstrapButton style={{position:\"relative\",left:475,top:-30}} variant=\"contained\" color=\"primary\" component=\"span\"\n        onClick={mapIntentsBulk}>\n          Upload\n        </BootstrapButton>\n        \n        </div>\n          \n          <br />\n          <div className=\"DeleteBot\">\n            <Typography variant=\"h3\" className={classes.heading1}>\n              Trained Data View\n            </Typography>\n\n            <Divider className={classes.line1} />\n          </div>\n            <BootstrapButton id =\"map\" variant=\"contained\" color=\"primary\" disableRipple className={classes.margin} style={{ position: \"relative\", left: 330, top: -100 }}\n              onClick={mapIntents}>\n              Map\n            </BootstrapButton>\n            <br /> <br /> <br /> <br /> <br />\n\n            <br />\n            <br />\n          </div>\n\n    <TableContainer component={Paper} style={{position:\"relative\",left:180, top:100}}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>SNo</StyledTableCell>\n            <StyledTableCell align=\"right\">Bot Intent</StyledTableCell>\n            <StyledTableCell align=\"right\">Scenario</StyledTableCell>\n            <StyledTableCell align=\"right\">Scenario Id</StyledTableCell>\n            <StyledTableCell align=\"right\">Type</StyledTableCell>\n            <StyledTableCell align=\"right\">Login</StyledTableCell>\n            <StyledTableCell align=\"right\">FeedBack</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            props.scDList && Array.isArray(props.scDList) && props.scDList.map((row) => (\n              row.scenario && <StyledTableRow key={row.label}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {counter}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.label}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.scenario.scenarioName}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.scenario.scenarioId}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.scenario.scenarioStrategy}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.scenario.msisdnRequired.toString()}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.scenario.feedbackRequired.toString()}</StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n\n        </div>\n      </FormControl>\n    </div>\n  );\n}\n\nfunction mapStatetoProps(state) {\n  return {\n    query: state.trainedData.query,\n    botIntent: state.trainedData.botIntent,\n    botScenario: state.trainedData.botScenario,\n    botName: state.topBar.botName,\n    result:state.trainedData.result,\n    scList:state.trainedData.scList,\n    inList:state.trainedData.inList,\n    scDList:state.trainedData.scDList\n  };\n}\n\n\nexport default connect(mapStatetoProps)(InputTextField);","export const ReqAnalysisActionType = {\n\n    SET_ENCRYPTED: 'SET_ENCRYPTED' ,\n    SET_DECRYPTED: 'SET_DECRYPTED',\n    \n};","import {ReqAnalysisActionType} from \"../action-types/req-analysis.actiontype\";\n\nexport function inputEncrypted(encrval){\n    return {type:ReqAnalysisActionType.SET_ENCRYPTED,\n            encrypted: encrval\n    };\n}\n\nexport function inputDecrypted(decrval){\n    return {type:ReqAnalysisActionType.SET_DECRYPTED,\n            decrypted: decrval\n    };\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from \"react-redux\";\nimport { ReqAnalysisActionType } from \"../action-types/req-analysis.actiontype\";\nimport { inputEncrypted, inputDecrypted } from \"../actions/req-analysis.action\";\nimport * as ReqAna from \"../actions/req-analysis.action\"\nimport Base64 from 'crypto-js/enc-base64';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '75ch',\n      height: 1000\n    },\n  },\n\n  box1: {\n    height: 100,\n    position: \"relative\",\n    top: -300,\n    left: 30\n  },\n\n  box2: {\n    height: 100,\n    position: \"relative\",\n    top: -100,\n    left: 40\n  },\n\n  Encrypt: {\n    position: \"relative\",\n    top: -302,\n    left: 70,\n    textTransform: \"capitalize\"\n  },\n\n  Decrypt: {\n    position: \"relative\",\n    top: 20,\n    left: -5,\n    textTransform: \"capitalize\"\n  },\n\n  heading: {\n    position: \"relative\",\n    top: -300,\n    left: -130,\n    fontFamily: \"Segoe UI\"\n  },\n  line: {\n    position: \"relative\",\n    top: -300,\n    width: 900,\n    left: 375,\n    height: 2,\n    backgroundColor: \"black\"\n  }\n}));\n\nfunction InputTextField(props) {\n  const classes = useStyles();\n  const handleChange = (action, input) => {\n    switch (action) {\n      case \"ENCRYPT_IN\":\n        props.dispatch(ReqAna.inputEncrypted(input));\n        break;\n\n      case \"DECRYPT_IN\":\n        props.dispatch(ReqAna.inputDecrypted(input));\n        break;\n\n\n\n    }\n  };\n\n  function encryptdata() {\n    var encrypted = props.encrypted;\n    var CryptoJS = require(\"crypto-js\");\n    var base64Key = \"dHJhaW51c19hdXRoUGxheQ==\";\n    var key = CryptoJS.enc.Base64.parse(base64Key);\n    var encryptedData = CryptoJS.AES.encrypt(encrypted, key, {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    });\n    console.log(encryptedData.toString());\n    props.dispatch(ReqAna.inputDecrypted(encryptedData.toString()));\n  }\n\n  function decryptdata() {\n\n    var decrypted = props.decrypted;\n    var CryptoJS = require(\"crypto-js\");\n    var base64Key = \"dHJhaW51c19hdXRoUGxheQ==\";\n    var key = CryptoJS.enc.Base64.parse(base64Key);\n    var decryptedData = CryptoJS.AES.decrypt(decrypted, key, {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    });\n    console.log(decryptedData.toString(CryptoJS.enc.Utf8));\n    props.dispatch(ReqAna.inputEncrypted(decryptedData.toString(CryptoJS.enc.Utf8)));\n  }\n\n  \n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item md={12} sm={6}>\n          <Typography variant=\"h3\" className={classes.heading}>\n            Encrypt/Decrypt Chatbot Data\n        </Typography>\n          <Divider className={classes.line} />\n        </Grid>\n        <Grid item md={12} sm={6}>\n\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField multiline rows={10} className={classes.box1}\n              label=\"Enter Text to be Encrypted\" variant=\"filled\"\n              value={props.encrypted}\n              onChange={(e) => handleChange(\"ENCRYPT_IN\", e.target.value)}\n            />\n            <br />\n            <TextField multiline rows={10}\n              className={classes.box2}\n              id=\"outlined-basic\"\n              label=\"Enter Text to be Decrypted\"\n              variant=\"filled\"\n              value={props.decrypted}\n              onChange={(e) => handleChange(\"DECRYPT_IN\", e.target.value)}\n            />\n          </form>\n        </Grid>\n        <Grid item md={12} sm={6}>\n\n          <Button className={classes.Encrypt} variant=\"contained\" color=\"secondary\" onClick={encryptdata} >\n            Encrypt\n    </Button>\n          <Button className={classes.Decrypt} variant=\"contained\" color=\"secondary\" onClick={decryptdata}>\n            Decrypt\n    </Button>\n        </Grid>\n\n        <span style={{ position: \"relative\", top: 250 }}>&nbsp;&nbsp;</span>\n      </Grid>\n    </div>\n  );\n}\n\nfunction mapStatetoProps(state) {\n  return {\n    encrypted: state.reqAnalysis.encrypted,\n    decrypted: state.reqAnalysis.decrypted,\n  };\n}\n\n\nexport default connect(mapStatetoProps)(InputTextField);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BotManager from \"./BotManager\";\nimport ScenarioManager from \"./ScenarioManager\";\nimport TrainBot from \"./TrainBot\";\nimport HealthMain from \"./HealthMain\";\nimport TrainedDat from \"./TrainedDat\";\nimport ReqAnalysisMain from \"./ReqAnalysisMain\";\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SelectedListItem() {\n  const classes = useStyles();\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <Router>\n    <div className={classes.root}>\n      <List component=\"nav\" style={{\"zIndex\": 100}} aria-label=\"main mailbox folders\">\n      <Link to={'/BotManager'} style={{textDecoration:\"none\",color:\"inherit\"}}>\n        <ListItem\n          button\n          selected={selectedIndex === 0}\n          onClick={(event) => handleListItemClick(event, 0)}\n        >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Bot Manager\" />\n        </ListItem>\n        </Link>\n        \n        <Link to={'/TrainedDat'} style={{textDecoration:\"none\",color:\"inherit\"}}>\n        <ListItem\n          button\n          selected={selectedIndex === 1}\n          onClick={(event) => handleListItemClick(event, 1)}\n        >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Trained Data\" />\n        </ListItem>\n        </Link>\n       \n        <Link to={'/ScenarioManager'} style={{textDecoration:\"none\",color:\"inherit\"}}>\n        <ListItem\n          button\n          selected={selectedIndex === 2}\n          onClick={(event) => handleListItemClick(event, 2)}\n        >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Scenario Manager\" />\n        </ListItem>\n        </Link>\n\n      \n\n  \n\n        <Link to={'/TrainBot'} style={{textDecoration:\"none\",color:\"inherit\"}}>\n        <ListItem\n          button\n          selected={selectedIndex === 3}\n          onClick={(event) => handleListItemClick(event, 3)}\n        >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Train Bot\" />\n        </ListItem>\n        </Link>\n\n       \n\n        \n\n        <Link to={'/ReqAnalysisMain'} style={{textDecoration:\"none\",color:\"inherit\"}}>\n        <ListItem\n          button\n          selected={selectedIndex === 4}\n          onClick={(event) => handleListItemClick(event, 4)}\n        >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Request Analysis\" />\n        </ListItem>\n        </Link>\n\n        <Link to={'/HealthMain'} style={{textDecoration:\"none\",color:\"inherit\"}}>\n        <ListItem\n          button\n          selected={selectedIndex === 5}\n          onClick={(event) => handleListItemClick(event, 5)}\n        >\n          <ListItemIcon>\n            <InboxIcon />\n          </ListItemIcon>\n          <ListItemText className={classes.text} primary=\"Health Status\" />\n        </ListItem>\n        </Link>\n      </List>\n      \n    </div>\n\n\n          <Switch>\n\n              <Route exact path='/ScenarioManager' component={ScenarioManager} />\n              <Route exact path='/BotManager' component={BotManager} />\n              <Route exact path='/TrainedDat' component={TrainedDat} />\n              <Route exact path='/TrainBot' component={TrainBot} />\n              <Route exact path='/HealthMain' component={HealthMain} />\n              <Route exact path='/ReqAnalysisMain' component={ReqAnalysisMain} />\n          </Switch>\n\n    </Router>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport airtelLogo from './Airtel.png'\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { connect } from \"react-redux\";\nimport {TopBarActionTypes} from \"../action-types/top-bar.actiontype\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  square :{\n    width:120,\n    height:40\n  },\n    formControl: {\n      position:\"relative\",\n      top:-10,\n      left:-30,\n    margin: theme.spacing(1),\n    width: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n\n}));\n\nfunction ButtonAppBar(props) {\n  const classes = useStyles();\n    const [state, setState] = React.useState({\n    age: '',\n    name: 'hai',\n  });\n\n  const handleChange = (event) => {\n    /*\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n    */\n    props.dispatch({type:TopBarActionTypes.SELECT_BOT,botName:event.target.value});\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" >\n        <Toolbar style={{backgroundColor:\"#0063cc\"}}>\n          <img src ={airtelLogo} className={classes.square} />\n          <Typography variant=\"h6\" className={classes.title} style={{color:\"white\"}}>\n            BOT Manager\n          </Typography>\n\n      <FormControl className={classes.formControl}>\n        <InputLabel style={{color:\"white\",}}>Select Bot Name</InputLabel>\n        <Select\n          native\n          value={state.botName}\n          onChange={handleChange}\n          inputProps={{\n            name: 'botName',\n            id: 'botName-native-simple',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          {\n            props.botList.map(bot=>(\n              <option value={bot}>{bot}</option>\n              ))\n          }\n          \n          \n        </Select>\n      </FormControl>\n      {console.log(props.botName)}\n          <Button color=\"inherit\">LogOut</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nfunction mapStatetoProps(state){\n  return{\n    botName:state.topBar.botName,\n    botList:state.topBar.botList\n  };\n}\n\nexport default connect(mapStatetoProps)(ButtonAppBar);","import {BotManagerActionType} from \"../action-types/bot-manager.actiontype\";\n\nconst initialState={\n    botName:\"\",\n    botToken:\"\",\n    botStrategy:\"\",\n    botAlgorithm:\"\",\n    botMsisdn:\"\",\n    botScore:\"\"\n\n};\n\nexport default function BotManagerReducer(state = initialState, action){\n\n    switch(action.type){\n\n        case BotManagerActionType.SET_BOT_NAME:\n            return{\n                ...state, botName:action.botName\n            };\n\n        case BotManagerActionType.SET_BOT_TOKEN:\n            return{\n                ...state, botToken:action.botToken\n            };\n\n        case BotManagerActionType.SET_BOT_STRATEGY:\n            return{\n                ...state, botStrategy:action.botStrategy\n            };\n\n        case BotManagerActionType.SET_BOT_ALGORITHM:\n            return{\n                ...state, botAlgorithm:action.botAlgorithm\n            };\n\n        case BotManagerActionType.SET_BOT_MSISDN:\n            return{\n                ...state, botMsisdn:action.botMsisdn\n            };\n\n        case BotManagerActionType.SET_BOT_SCORE:\n            return{\n                ...state, botScore:action.botScore\n            };\n\n        default:\n  \n    }\n    return state;\n}","import {TrainedDataActionType} from \"../action-types/trained-data.actiontype\";\n\nconst initialState={\n    query:\"\",\n    botIntent:\"\",\n    botScenario:\"\",\n    result:[],\n    scList:[],\n    inList:[],\n    scDList:[]\n\n};\n\nexport default function TrainedDataReducer(state = initialState, action){\n\n    switch(action.type){\n\n        case TrainedDataActionType.SET_QUERY:\n            return{\n                ...state, query:action.query\n            };\n\n        case TrainedDataActionType.SET_BOT_INTENT:\n            return{\n                ...state, botIntent:action.botIntent\n            };\n\n        case TrainedDataActionType.SET_BOT_SCENARIO:\n            return{\n                ...state, botScenario:action.botScenario\n            };\n\n        case TrainedDataActionType.SET_RESULT:\n            return{\n                ...state, result:action.result\n            };\n\n        case TrainedDataActionType.SET_SCLIST:\n            return{\n                ...state, scList:action.scList\n            };\n\n        case TrainedDataActionType.SET_INLIST:\n            return{\n                ...state, inList:action.inList\n            };\n\n        case TrainedDataActionType.SET_SCDLIST:\n            return{\n                ...state, scDList:action.scDList ? action.scDList : []\n            };\n\n        case TrainedDataActionType.SET_INTENT:\n            let temp={};\n            for(var x in state.scDList){\n                if(state.scDList[x].scenario && state.scDList[x].scenario.scenarioName===state.botScenario)\n                {\n                    temp=state.scDList[x];\n                    break;\n                }\n            }\n            for(var x in state.scDList){\n             if(state.scDList[x].label===state.botIntent)\n                {\n                    state.scDList[x].scenario=temp.scenario;\n                    break;\n                }   \n            }\n            return state;\n//FORECHANGE\n        case TrainedDataActionType.SET_BINTENT:\n            let flag1=0,flag2=0,flag3=0;\n            temp={};\n            for(var x in state.scDList){\n                if(state.scDList[x].scenario && state.scDList[x].scenario.scenarioName===action.obj.scenario.scenarioName)\n                {\n                    temp=state.scDList[x];\n                    break;\n                }\n            }\n            for(var x in state.scDList){\n                if(state.scDList[x].label===action.obj.label)\n                {\n                    state.scDList[x].scenario=action.obj.scenario;\n                    flag1=1;break;\n                }   \n            }\n            for(var x in state.scList){\n                if(action.obj.scenario && state.scList[x]===action.obj.scenario.scenarioName)\n                {\n                    \n                    flag2=1;break;\n                }\n            }\n            for(var x in state.inList){\n                if(state.inList[x]===action.obj.label)\n                {\n                    flag3=1;break;\n                }\n            }\n            if(flag1!=1)\n            state.scDList.push(action.obj);\n            if(flag2!=1)\n            state.scList.push(action.obj.scenario && action.obj.scenario.scenarioName);\n            if(flag3!=1)\n            state.inList.push(action.obj.label);\n\n            return state;\n\n//FINAL\n        case TrainedDataActionType.ADD_SCENARIO:\n            if(!action.scenario) {\n                return state\n            }\n            temp=[];\n            let temp2=action.scenario;\n            temp2.id=action.scenario.scenarioId;\n            temp2.scenarioKey=action.scenario.scenarioId+\"-\"+action.scenario.scenarioName;\n            temp.scenario=temp2;\n            temp.id=\"null\";\n            temp.label=\"null\";\n            temp.sampleCount=\"0\";\n            state.scDList.push(temp);\n            state.scList.push(state.action.scenarioName);\n            return state;\n\n//FINAL\n       case TrainedDataActionType.REM_SCENARIO:\n            for(var x in state.scDList){\n                if(state.scDList[x].scenario && state.scDList[x].scenario.scenarioName!=action.remScenario)\n                    continue;\n                else if(state.scDList[x].scenario)\n                    state.scDList[x].scenario.scenarioName=state.scDList[x].scenario.scenarioId=\"null\"\n            }\n            temp2=[];\n            for(var x in state.scList){\n                if(state.scList[x]!=action.remScenario)\n                    temp2.push(state.scList[x])\n            }\n            return{\n                ...state,\n                scList:temp2,\n            };\n\n\n        /*\n        case TrainedDataActionType.GENERATE:\n            return state;\n\n\n        case TrainedDataActionType.MAP:\n            \n            return state;\n        */\n\n        default:\n            return state;\n  \n    }\n    \n}","export const LoginActionType = {\n\n    SET_USER: 'SET_USER' ,\n    SET_PASSWORD: 'SET_PASSWORD',\n    LOGGED_IN:\"LOGGED_IN\",\n    SET_JWT:\"SET_JWT\"\n};","import {LoginActionType} from \"../action-types/login.actiontype\";\n\nconst initialState={\n    user:\"\",\n    password:\"\",\n   \n\n};\n\nexport default function LoginReducer(state = initialState, action){\n\n    switch(action.type){\n\n        case LoginActionType.SET_USER:\n            return{\n                ...state, user:action.user\n            };\n\n        case LoginActionType.SET_PASSWORD:\n            return{\n                ...state, password:action.password\n            };\n        case LoginActionType.LOGGED_IN:\n            return{\n                 ...state, isLoggedIn:action.isLoggedIn\n            };\n           \n        case LoginActionType.SET_JWT:\n            return{\n                ...state, jwt:action.jwt\n             };\n       \n\n        default:\n            return state;\n  \n    }\n    \n}","import {ScenarioManagerActionType} from \"../action-types/scenario-manager.actiontype\";\n\n\nconst initialState={\n\tscenarioEditted:\"\",\n\tscenarioName:\"\",\n\tscenarioId:\"\",\n\tscenarioStrat:\"\",\n\tscenarioLOB:\"\",\n\treqMSISDN:true,\n\treqFeedback:true,\n\tscenarioResp:\"\",\n\tscenarioRemove:\"\",\n\tsaveOK:true,\n\tloadOK:true,\n\tremoveOK:true\n};\n\nexport default function ScenarioManagerReducer(state=initialState,action){\n\n\tswitch(action.type){\n\n\t\tcase ScenarioManagerActionType.EDIT_SC_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioEditted:action.scenarioEditted\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.SC_NAME_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioName:action.scenarioName\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.SC_ID_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioId:action.scenarioId\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.SC_STRAT_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioStrat:action.scenarioStrat\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.IS_MSISDN_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\treqMSISDN:action.reqMSISDN\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.IS_FB_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\treqFeedback:action.reqFeedback\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.SC_RESP_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioResp:action.scenarioResp\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.SC_REMOVE:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioRemove:action.scenarioRemove\n\t\t\t};\n\n\t\tcase ScenarioManagerActionType.SC_LOB_IN:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tscenarioLOB:action.scenarioLOB\n\t\t\t};\n\t\t\n\t\tcase ScenarioManagerActionType.SAVE_SC:\n\t\t\tlet res =  fetch('http://localhost:8090/saveScenario', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                   \tscenario:{\n                   \t\tscenarioId:action.actionObj.scenarioId,\n                   \t\tscenarioName:action.actionObj.scenarioName,\n                   \t\tscenarioStrategy:action.actionObj.scenarioStrat,\n                   \t\tscenarioLob:action.actionObj.scenarioLOB,\n                   \t\tscenarioResponse:action.actionObj.scenarioResp,\n                   \t\tmsisdnRequired:action.actionObj.reqMSISDN,\n                   \t\tfeedbackRequired:action.actionObj.reqFeedback\n                   \t}\n                })\n            });\n\n            let result =  res.json();\n\n            if(result.status==200)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsaveOK:true\n\t\t\t}\n\n\t\t\telse\n\t\t\t\treturn{\n\t\t\t\t\t...state,\n\t\t\t\t\tsaveOK:false\n\t\t\t}\n\t\t\t\n\n         case ScenarioManagerActionType.LOAD_SC:\n\t\t\tres =  fetch('http://localhost:8090/loadScenario', {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                   \tscenarioName:action.scenarioEditted\n                })\n            });\n\n            result =  res.json();\n\n            if(result.scenarioName==action.scenarioName && result.scenarioId!=\"\")\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscenarioName:result.scenarioName,\n\t\t\t\tscenarioId:result.scenarioId,\n\t\t\t\tscenarioStrat:result.scenarioStrategy,\n\t\t\t\treqMSISDN:result.msisdnRequired,\n\t\t\t\treqFeedback:result.feedbackRequired,\n\t\t\t\tscenarioResp:result.scenarioResponse\n\t\t\t}\n\n\t\t\telse\n\t\t\t\treturn state;\n\n\t\t\t\n\t\t\n\t\tcase ScenarioManagerActionType.REMOVE_SC:\n\t\t\tres =  fetch('http://localhost:8090/removeScenario', {\n                method: 'get',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                   \tscenarioName:action.scenarioEditted\n                })\n            });\n\n            result = res.json();\n\n           \treturn state;\n\t\t\t\n\t\t\t\t\n\t\tdefault :\n\t\t\treturn state;\n\t\t\t\n\t}\n}","import {ReqAnalysisActionType} from \"../action-types/req-analysis.actiontype\";\nconst initialState={\n    encrypted:\"\",\n    decrypted:\"\",\n   \n\n};\n\nexport default function ReqAnalysisReducer(state = initialState, action){\n\n    switch(action.type){\n\n        case ReqAnalysisActionType.SET_ENCRYPTED:\n            return{\n                ...state, encrypted:action.encrypted\n            };\n\n        case ReqAnalysisActionType.SET_DECRYPTED:\n            return{\n                ...state, decrypted:action.decrypted\n            };\n\n       \n\n        default:\n            return state;\n  \n    }\n    \n}\n\n","import {TopBarActionTypes} from \"../action-types/top-bar.actiontype\";\n\nconst initialState={\n\tbotName:\"\",\n\tbotList:['None',\"chatBot\",\"hrBot\",\"paymentsBankBot\",\"prePaidBot\",\"postpaidSeibelBot\",\"dthBot\"]\n\t\n};\n\nexport default function TopBarReducer(state=initialState,action){\n\n\tswitch(action.type){\n\n\t\tcase TopBarActionTypes.SELECT_BOT :\n\t\t\tconsole.log(\"hey\");\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tbotName:action.botName\n\t\t\t};\n\t\t\t\n\t\tcase TopBarActionTypes.ADD_BOT :\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tbotList:state.botList.push(action.bot)\n\t\t\t};\n\t\tcase TopBarActionTypes.REMOVE_BOT :\n\t\t\tconst index=state.botList.indexOf(action.bot);\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tbotList:state.botList.splice(index,1)\n\t\t\t};\n\n\t\t\n\t\tdefault :\n\t\t\treturn state;\n\t\t\t\n\t}\n}","import {HealthMainActionTypes} from \"../action-types/health-main.actiontype\";\n\nconst initialState={\n    result:[]\n};\n\nexport default function HealthMainReducer(state = initialState, action){\n            console.log(action.type);\n            console.log(action.result);\n\n    switch(action.type){\n\n        case HealthMainActionTypes.FILL_TABLE:\n           /* var x;\n            let temp=[];\n            for(x in action.result){\n                temp.push(x);\n            }\n            */\n            return{\n                ...state,\n                 result:action.result\n            };\n\n        \n        default :\n            return state;            \n    }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport BotManagerReducer from '../reducers/bot-manager.reducer';\nimport TrainedDataReducer from '../reducers/trained-data.reducer';\nimport LoginReducer from '../reducers/login.reducer';\nimport ScenarioManagerReducer from '../reducers/scenario-manager.reducer';\nimport ReqAnalysisReducer from '../reducers/req-analysis.reducer';\nimport TopBarReducer from \"../reducers/top-bar.reducer\"\nimport HealthMainReducer from \"../reducers/health-main.reducer.js\";\n\nconst initialState = {};\nconst middleware  = [thunk]\n\nconst rootReducer= combineReducers({\n\n    botManager:  BotManagerReducer,\n    trainedData: TrainedDataReducer,\n    login: LoginReducer,\n    scenarioManager: ScenarioManagerReducer,\n    reqAnalysis: ReqAnalysisReducer,\n    topBar:TopBarReducer,\n    health: HealthMainReducer,\n\n});\n\nconst store = createStore(\n    rootReducer,\n    compose(\n        applyMiddleware(...middleware)\n    )\n)\n    \nexport default store;\n","import {LoginActionType} from \"../action-types/login.actiontype\";\n\nexport function inputUser(userIn){\n    return {type:LoginActionType.SET_QUERY,\n            user: userIn\n    };\n}\n\nexport function inputPassword(passwordIn){\n    return {type:LoginActionType.SET_BOT_INTENT,\n            password: passwordIn\n    };\n}\n\nexport function loggedIn(isLoggedin){\n    return {type:LoginActionType.LOGGED_IN,\n            isLoggedIn: isLoggedin\n    };\n}\n\nexport function setJwt(Jwt){\n    return {type:LoginActionType.SET_JWT,\n            jwt:Jwt\n    };\n}\n\n\n","import React from 'react';\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { blue } from '@material-ui/core/colors';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Grid from '@material-ui/core/Grid';\nimport InputBase from '@material-ui/core/InputBase';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Airtel from './Airtel.png';\n//import User from './User.png';\nimport { connect } from \"react-redux\";\nimport { LoginActionType } from \"../action-types/login.actiontype\";\nimport * as Login from \"../actions/login.action\"\nimport { HashRouter as Router, Switch, Route, Link } from 'react-router-dom';\n// import homepage from \"../\";\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 150,\n      float: \"left\",\n      height: 30,\n      alignItems: \"left\",\n      position:\"absolute\",\n      top: 50,\n      left: -380,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    heading :{\n      position:\"absolute\",\n      top: 320,\n      left: 680,\n      fontFamily: \"Segoe UI\"\n    },\n    line :{\n      position:\"relative\",\n      top: 50,\n      width: 900,\n      left: -250,\n      height: 2,\n      backgroundColor:\"black\"\n    },\n    heading1 :{\n      position:\"absolute\",\n      top: 950,\n      left: 150,\n      fontFamily: \"Segoe UI\"\n    },\n    line1 :{\n      position:\"relative\",\n      top: 110,\n      width: 900,\n      left: 150,\n      height: 2,\n      backgroundColor:\"black\"\n    },\n    field1 :{\n      position:\"relative\",\n      top: 1880,\n      left: 10,\n      \n    },\n  }));\n \n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n      position: 'relative',\n      top: 45,\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 170,\n    height: 30,\n    paddingTop: 6,\n    paddingRight: 12,\n    paddingBottom: 6,\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst CSSTextField = withStyles({\n  root: {\n    width: 285,\n    height: 1,\n    padding: '15px 3px',\n    position: 'relative',\n    top: 30,\n    left: 615,\n    fontSize: 20,\n      },\n  \n  \n})(TextField);\n\n  const BootstrapButton = withStyles({\n    root: {\n      boxShadow: 'none',\n      textTransform: 'none',\n      fontSize: 18,\n      position: 'relative',\n      top: 80,\n      left: 20,\n      padding: '6px 12px',\n      border: '1px solid',\n      lineHeight: 1.5,\n      align: 'center',\n      backgroundColor: '#0367fc',\n      borderColor: '#0367fc',\n      \n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:hover': {\n        backgroundColor: '#0069d9',\n        borderColor: '#0062cc',\n        boxShadow: 'none',\n      },\n      '&:active': {\n        boxShadow: 'none',\n        backgroundColor: '#0062cc',\n        borderColor: '#005cbf',\n      },\n      '&:focus': {\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\n      },\n    },\n  })(Button);\n\n  function InputTextField(props) {\n    const classes = useStyles();\n    const handleChange = (action,input) => {\n      switch(action){\n        case \"USER_IN\" :  \n          props.dispatch(Login.inputUser(input));\n          break;\n  \n        case \"PASSWORD_IN\" :\n          props.dispatch(Login.inputPassword(input));\n          break;          \n     \n        }\n      };\n    \n      async function doLogin() {\n        if (!props.user) {\n            return;\n        }\n        if (!props.password) {\n            return;\n        }\n\n        /*setState({\n            buttonDisabled: true\n        })*/\n\n\n        try{\n\n            let res =  await fetch(`http://10.5.205.104:8097/authenticate`, {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: props.user,\n                    password: props.password\n                })\n            });\n            //console.log(res);\n\n            let result = await res.json();\n\n            console.log(result);\n\n            if (result && result.success){\n                props.dispatch(Login.loggedIn(true)) \n                props.dispatch(Login.setJwt(result.jToken))           \n                console.log(\"Correct\");\n                \n                \n            }\n            else{\n                props.dispatch(Login.inputUser(\"\"));\n                props.dispatch(Login.inputPassword(\"\"));                \n                console.log(\"Wrong\");\n            }\n        }\n\n        catch(e){\n            console.log(e);\n            //this.resetForm(); \n\n        }\n    }\n\n\n    return (\n        \n        \n        <div className = \"loginForm\">\n            \n            <div className= \"User\">{/*<img src={User} alt=\"logo\" />*/} </div>\n            \n            <Typography variant=\"h4\" className={classes.heading}>\nBOT MANAGER        </Typography >\n                <div className = \"inputBoxes\">\n            \n\n            <CSSTextField\n                type='text'\n                placeholder='UserName'\n                value={props.user}\n                onChange={(e)=>handleChange(\"USER_IN\",e.target.value)}\n                />\n                <br /> <br / >\n\n            <CSSTextField\n                type='password'\n                placeholder='Password'\n                value={props.password}\n                onChange={(e)=>handleChange(\"PASSWORD_IN\",e.target.value)}\n                />\n            </div>\n            <div className=\"check\">\n                <input type=\"checkbox\"\n                    \n            /> Remember Me\n             \n            </div>\n            <BootstrapButton variant=\"contained\" color=\"primary\" disableRipple className={classes.margin}\n            onClick={doLogin}\n              >\n                Login\n            </BootstrapButton>\n            \n            </div>\n        );\n    }\n\n\n\nfunction mapStatetoProps(state){\n    return{\n    user: state.login.user,\n    password: state.login.password,\n    jwt:state.login.jwt\n    };\n  }\n  \n  \n  export default connect(mapStatetoProps)(InputTextField);","import React, { Component } from 'react';\nimport './App.css';\nimport HomeMessage from \"./components/HomeMessage\"\nimport FeatureList from \"./components/FeatureList\"\nimport TopBar from \"./components/TopBar\"\nimport ScenarioManager from './components/ScenarioManager';\nimport  TrainBot from \"./components/TrainBot\";\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouteras as Router, Switch } from 'react-router-dom';\nimport store from './store/store';\nimport Grid from '@material-ui/core/Grid';\nimport LoginPage from \"./components/LoginPage\";\n\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <TopBar />\n        <FeatureList />\n          \n  \n      </div>\n    );\n  }\n  \n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { HashRouteras as Router, Switch } from 'react-router-dom';\nimport store from './store/store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n\n  </Provider>\n  , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}